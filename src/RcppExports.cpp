// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppEigen.h>
#include <Rcpp.h>

using namespace Rcpp;

// laplaceApproximation
Eigen::MatrixXd laplaceApproximation(int ny, Eigen::MatrixXd X, Eigen::VectorXd b_mean, Eigen::VectorXd var_vec, int n_choice_set);
RcppExport SEXP _PanelMixedDesign_laplaceApproximation(SEXP nySEXP, SEXP XSEXP, SEXP b_meanSEXP, SEXP var_vecSEXP, SEXP n_choice_setSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type ny(nySEXP);
    Rcpp::traits::input_parameter< Eigen::MatrixXd >::type X(XSEXP);
    Rcpp::traits::input_parameter< Eigen::VectorXd >::type b_mean(b_meanSEXP);
    Rcpp::traits::input_parameter< Eigen::VectorXd >::type var_vec(var_vecSEXP);
    Rcpp::traits::input_parameter< int >::type n_choice_set(n_choice_setSEXP);
    rcpp_result_gen = Rcpp::wrap(laplaceApproximation(ny, X, b_mean, var_vec, n_choice_set));
    return rcpp_result_gen;
END_RCPP
}
// MSMApprox
Eigen::MatrixXd MSMApprox(int ny, Eigen::MatrixXd X, Eigen::VectorXd b_mean, Eigen::VectorXd var_vec, int nChoiceSet);
RcppExport SEXP _PanelMixedDesign_MSMApprox(SEXP nySEXP, SEXP XSEXP, SEXP b_meanSEXP, SEXP var_vecSEXP, SEXP nChoiceSetSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type ny(nySEXP);
    Rcpp::traits::input_parameter< Eigen::MatrixXd >::type X(XSEXP);
    Rcpp::traits::input_parameter< Eigen::VectorXd >::type b_mean(b_meanSEXP);
    Rcpp::traits::input_parameter< Eigen::VectorXd >::type var_vec(var_vecSEXP);
    Rcpp::traits::input_parameter< int >::type nChoiceSet(nChoiceSetSEXP);
    rcpp_result_gen = Rcpp::wrap(MSMApprox(ny, X, b_mean, var_vec, nChoiceSet));
    return rcpp_result_gen;
END_RCPP
}
// PQLApprox
Eigen::MatrixXd PQLApprox(int nu, Eigen::MatrixXd X, Eigen::VectorXd b_mean, Eigen::VectorXd var_vec, int nChoiceSet);
RcppExport SEXP _PanelMixedDesign_PQLApprox(SEXP nuSEXP, SEXP XSEXP, SEXP b_meanSEXP, SEXP var_vecSEXP, SEXP nChoiceSetSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type nu(nuSEXP);
    Rcpp::traits::input_parameter< Eigen::MatrixXd >::type X(XSEXP);
    Rcpp::traits::input_parameter< Eigen::VectorXd >::type b_mean(b_meanSEXP);
    Rcpp::traits::input_parameter< Eigen::VectorXd >::type var_vec(var_vecSEXP);
    Rcpp::traits::input_parameter< int >::type nChoiceSet(nChoiceSetSEXP);
    rcpp_result_gen = Rcpp::wrap(PQLApprox(nu, X, b_mean, var_vec, nChoiceSet));
    return rcpp_result_gen;
END_RCPP
}
// importanceSampleFixedY
Eigen::MatrixXd importanceSampleFixedY(Eigen::MatrixXd Y, Eigen::MatrixXd X, Eigen::VectorXd b_mean, Eigen::VectorXd var_vec, int nChoiceSet, int nU);
RcppExport SEXP _PanelMixedDesign_importanceSampleFixedY(SEXP YSEXP, SEXP XSEXP, SEXP b_meanSEXP, SEXP var_vecSEXP, SEXP nChoiceSetSEXP, SEXP nUSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Eigen::MatrixXd >::type Y(YSEXP);
    Rcpp::traits::input_parameter< Eigen::MatrixXd >::type X(XSEXP);
    Rcpp::traits::input_parameter< Eigen::VectorXd >::type b_mean(b_meanSEXP);
    Rcpp::traits::input_parameter< Eigen::VectorXd >::type var_vec(var_vecSEXP);
    Rcpp::traits::input_parameter< int >::type nChoiceSet(nChoiceSetSEXP);
    Rcpp::traits::input_parameter< int >::type nU(nUSEXP);
    rcpp_result_gen = Rcpp::wrap(importanceSampleFixedY(Y, X, b_mean, var_vec, nChoiceSet, nU));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_PanelMixedDesign_laplaceApproximation", (DL_FUNC) &_PanelMixedDesign_laplaceApproximation, 5},
    {"_PanelMixedDesign_MSMApprox", (DL_FUNC) &_PanelMixedDesign_MSMApprox, 5},
    {"_PanelMixedDesign_PQLApprox", (DL_FUNC) &_PanelMixedDesign_PQLApprox, 5},
    {"_PanelMixedDesign_importanceSampleFixedY", (DL_FUNC) &_PanelMixedDesign_importanceSampleFixedY, 6},
    {NULL, NULL, 0}
};

RcppExport void R_init_PanelMixedDesign(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}

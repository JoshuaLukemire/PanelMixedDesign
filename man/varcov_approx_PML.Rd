% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/varcov_approx_PML.R
\name{varcov_approx_PML}
\alias{varcov_approx_PML}
\title{For a given choice experiment model matrix, this function will approximate the variance-covariance matrix for the model parameters under MQL, PQL, MSM, Laplace, or Importance Sampling}
\usage{
varcov_approx_PML(
  X,
  method = "MQL",
  n_choice_set,
  effect_means,
  effect_vars,
  PQL_n_samples = 1000,
  MSM_n_samples = 1000,
  Laplace_n_samples = 1000,
  IS_n_samples_u = 1000,
  IS_n_samples_Y = 1000,
  Y = NULL
)
}
\arguments{
\item{X}{The model matrix for the choice experiment. Each row is an effects coded alternative. See example below for moving from the original design (in terms of attribute settings) to the corresponding effects coded model matrix.}

\item{method}{Choice of variance-covariance approximation method. Options are MQL, PQL, MSM, Laplace, or Importance. MQL is the default.}

\item{n_choice_set}{Number of choice sets}

\item{effect_means}{Vector of means for the effects coded attribute effects}

\item{effect_vars}{Vector of variances for the effects coded attribute effects. Must be equal in length to the effect_means argument. Use a 0 for any non-random terms.}

\item{PQL_n_samples}{Number of random samples to use in PQL evaluation}

\item{MSM_n_samples}{Number of random samples to use in MSM evaluation}

\item{Laplace_n_samples}{Number of random samples to use in the Laplace evaluation}

\item{IS_n_samples_u}{Number of random samples of random effects to use in importance sampling}

\item{IS_n_samples_Y}{Number of random samples of the response vector to use in importance sampling}

\item{Y}{an optional enumeration of all possible responses. This is only used for importance sampling. If provided, importance sampling will use the full enumeration of outcomes instead of randomly sampling responses.}
}
\value{
The approximation to the variance covariance matrix for the model parameters.
}
\description{
For a given choice experiment model matrix, this function will approximate the variance-covariance matrix for the model parameters under MQL, PQL, MSM, Laplace, or Importance Sampling
}
\examples{
# Libraries
library(DoE.base)

# 3 attributes
nattr <- 3

# 6 choice sets
n_choice_set <- 6

# 2 alternatives per choice set
n_alternative <- 2 

# 3 factors, each at 2 levels
n_level_attribute <- c(2, 2, 2)

# effect means
mu <- c(1.0, -0.4, -0.8)

# effect variances
sig <- c(0.5, 0.3, 0.4)

# indices for alternatives
st = NULL

# For this example, we do not already have a design, so we are going to
# construct a random design by first enumerating all possible alternatives
# and then randomly selecting a set of them for the experiment. 
# When inputting this quantity yourself, this should be a matrix of dimension
# (n_alternative * n_choice_set) x (n_attribute), where element i,j is the 
# integer-valued attribute setting for row i, attribute j. 

# Full enumeration of possible alternatives
all_possible_points <- purrr::quietly(fac.design)(nlevels=n_level_attribute, random=FALSE)$result

# Randomly select n_choice_set * n_alternative rows (this is the DCE)
for(i in 1:n_choice_set){
    st = c( st, sample(prod(n_level_attribute), n_alternative, replace=FALSE) )
}
design_matrix = (all_possible_points)[st,]
rownames(design_matrix) <- NULL # remove unneeded row labels

# Effects coding of the design matrix
contr=rep('contr.sum',nattr)
names(contr)=names(design_matrix)
contr=as.list(contr)
model_matrix = model.matrix(~., design_matrix, contrasts = contr)[,-1] 

varcovAppr <- varcov_approx_PML(model_matrix, method = "PQL",
    n_choice_set = n_choice_set, effect_means = mu, effect_vars = sig) 

}

% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/varcov_approx_PML.R
\name{varcov_approx_PML}
\alias{varcov_approx_PML}
\title{Approximate the variance covariance matrix for the model parameters}
\usage{
varcov_approx_PML(
  X,
  method = "MQL",
  n_choice_set,
  effect_means,
  effect_vars,
  PQL_n_samples = 1000,
  MSM_n_samples = 1000,
  Laplace_n_samples = 1000,
  IS_n_samples_u = 1000,
  IS_n_samples_Y = 1000,
  Y = NULL
)
}
\arguments{
\item{X}{The model matrix for the choice experiment. Each row is an effects coded alternative.}

\item{method}{Choice of variance-covariance approximation method. Options are MQL, PQL, MSM, Laplace, or Importance. MQL is the default.}

\item{n_choice_set}{Number of choice sets}

\item{effect_means}{Vector of means for the effects coded attribute effects}

\item{effect_vars}{Vector of variances for the effects coded attribute effects. Must be equal in length to the effect_means argument. Use a 0 for any non-random terms.}

\item{PQL_n_samples}{Number of random samples to use in PQL evaluation}

\item{MSM_n_samples}{Number of random samples to use in MSM evaluation}

\item{Laplace_n_samples}{Number of random samples to use in the Laplace evaluation}

\item{IS_n_samples_u}{Number of random samples of random effects to use in importance sampling}

\item{IS_n_samples_Y}{Number of random samples of the response vector to use in importance sampling}

\item{Y}{an optional enumeration of all possible responses. This is only used for importance sampling. If provided, importance sampling will use the full enumeration of outcomes instead of randomly sampling responses.}
}
\value{
The approximation to the variance covariance matrix for the model parameters.
}
\description{
Approximate the variance covariance matrix for the model parameters
}
\examples{
# Libraries
library(DoE.base)

# 3 attributes
nattr <- 3

# 6 choice sets
n_choice_set <- 6

# 2 alternatives per choice set
n_alternative <- 2 

# 3 factors, each at 2 levels
n_level_attribute <- c(2, 2, 2)

# effect means
mu <- c(1.0, -0.4, -0.8)

# effect variances
sig <- c(0.5, 0.3, 0.4)

# indices for alternatives
st = NULL

# all possible design points
fullfac <- purrr::quietly(fac.design)(nlevels=n_level_attribute, random=FALSE)$result

# Generate a random design
for(i in 1:n_choice_set){
    st = c( st, sample(prod(n_level_attribute), n_alternative, replace=FALSE) )
}
designm=(fullfac)[st,]

# Effects coding
contr=rep('contr.sum',nattr)
names(contr)=names(designm)
contr=as.list(contr)
M = model.matrix(~., designm, contrasts = contr)[,-1] 

varcovAppr <- varcov_approx_PML(M, method = "PQL",
    n_choice_set = n_choice_set, effect_means = mu, effect_vars = sig) 

}
